TransactionScope transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions() { IsolationLevel = IsolationLevel.ReadCommitted });
                using (transaction)
                {
                    applicantInfo.IsTrackingOn = true;


                    IApplicantInfoDAL applicant = (IApplicantInfoDAL)DALImplementationFactory.GetDALImplementation(typeof(IApplicantInfoDAL));
                    DataCreateRequest dataCreateRequest = new DataCreateRequest(applicantInfo);
                    applicantInfo.Identifier = applicant.Create(dataCreateRequest);

                    transaction.Complete();
                }

 ViewData["Sponser"] = new SelectList(SponserDAL.SearchSponserList(" Status ='Active'"), "UserID", "DisplayName");

 @Html.DropDownList("User.UserGroup", UserType, new { @class = "form-control" })

@using (Html.BeginForm("SubmitPaymant", "Payments", FormMethod.Post, new { @id = "PaymentReg", enctype = "multipart/form-data", @class = "form-horizontal mar-top" }))
{
        <div class="panel-body">
            <div class="form-group">
                <label class="col-sm-1 control-label" for="demo-is-inputsmall">Year</label>
                <div class="col-sm-3">
                    <input type="hidden" placeholder="" id="Yearhnd" name="Yearhnd" class="form-control">
                    <select class="selectpicker" id="demo-chosen-select-Year" onclick="GetOrphans()">
                        <option value="2017">2017</option>
                        <option value="2017">2018</option>
                        <option value="2018">2019</option>
                        <option value="2020">2020</option>
                        <option value="2021">2021</option>
                        <option value="2022">2022</option>
                        <option value="2023">2023</option>
                        <option value="2024">2024</option>
                        <option value="2025">2025</option>
                        <option value="2026">2026</option>
                        <option value="2027">2027</option>
                        <option value="2028">2028</option>
                        <option value="2029">2029</option>
                        <option value="2030">2030</option>
                    </select>
                </div>
                <label class="col-sm-1 control-label" for="demo-is-inputsmall">Quarter</label>
                <div class="col-sm-3" onclick="GetOrphans()">
                    <input type="hidden" placeholder="" id="Querterhnd" name="Querter" class="form-control">
                    <select class="selectpicker" id="demo-chosen-select-qty">
                        <option value="1">1st</option>
                        <option value="2">2nd</option>
                        <option value="3">3rd</option>
                        <option value="4">4th</option>
                    </select>
                </div>
                <label class="col-sm-1 control-label" for="demo-is-inputsmall">Sponser</label>
                <div class="col-sm-2">
                    @Html.DropDownList("SponserIDdrp", ViewData["Sponser"] as SelectList, "--select--", new { @class = "form-control", @id = "SponserID", @onclick = "GetOrphans()" })
                </div>
            </div>
        </div>
            <div id="tableData">
            </div>
            <div id="tableDataPrint">
            </div>
            <div class="panel-footer text-right">
                <input type="hidden" id="ItemJson" name="ItemJson" />
                <div class="box-inline">
                    <button type="button" id="Printrpt" onclick="GetReport()" class="finish btn btn-dark">Print</button>
                    <button type="button" class="finish btn btn-dark" onclick="SubmitForm()">Submit</button>
                </div>
            </div>
        }

AdditionlItems = $('#orphantbl  tr').slice(1).map(function () {
            return {
                ID: this.cells[0].innerHTML,
                Amount: this.cells[5].firstChild.value,
            }
        }).get();
        var addionaljson = JSON.stringify(AdditionlItems);
        $("#ItemJson").val(addionaljson);
        $("#PaymentReg").submit();

@using BaseModule.Models.SystemData
@{
    BaseModule.Models.MasterData.UserModel user = Model;
    var UserType = new SelectList(new[]
                                          {
                                               new {ID=UserGroup.Admin.ToString(),Name="Admin"},
                                               new {ID=UserGroup.Sponsor.ToString(),Name="Sponsor"},
                                               new {ID=UserGroup.StaffMember.ToString(),Name="Staff Member"},
                                               new {ID=UserGroup.Supervisor.ToString(),Name="Supervisor"}

                                          },
                           "ID", "Name", user.UserGroup.ToString());

List<OrphanModel> GRNItemList = (List<OrphanModel>)JsonConvert.DeserializeObject(ItemJson, typeof(List<OrphanModel>));

 public JsonResult GetOrphanList(string SponserID, string Year, string Qty)
        {
            
            return Json(new
            {
                HTMLToPrint = HTMLPrint,
                HTML = HTMLDate
            }, JsonRequestBehavior.AllowGet);
        }